
[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc'

# ファイラ
[[plugins]]
repo = 'Shougo/defx.nvim'
hook_add = '''
  nnoremap <silent>   [Space]f
  \ <Cmd>Defx -listed -resume -buffer-name=win-`win_getid()`<CR>
'''
hook_source = '''
  call defx#custom#column('mark', {
          \ 'readonly_icon': '✗',
          \ 'selected_icon': '✓',
          \ })
  call defx#custom#column('icon', {
          \ 'directory_icon': '+',
          \ 'opened_icon': '-',
          \ 'root_icon': ' ',
          \ })
  call defx#custom#column('icon', {
        \ 'directory_icon': '▸ ',
        \ 'file_icon': '  ',
        \ 'opened_icon': '▾ ',
        \ 'root_icon': '  ',
        \ })
'''
[plugins.ftplugin]
defx = '''
  " Define mappings
  nnoremap <silent><buffer><expr> <CR>
  \ defx#is_binary() ?
  \ defx#do_action('execute_system') :
  \ defx#do_action('open')
  nnoremap <silent><buffer><expr> +       defx#do_action('open', 'choose')
  nnoremap <silent><buffer><expr> c       defx#do_action('copy')
  nnoremap <silent><buffer><expr> !       defx#do_action('execute_command')
  nnoremap <silent><buffer><expr> &       defx#do_action('execute_command', ['', 'async'])
  nnoremap <silent><buffer><expr> m       defx#do_action('move')
  nnoremap <silent><buffer><expr> p       defx#do_action('paste')
  nnoremap <silent><buffer><expr> l       defx#do_action('open')
  nnoremap <silent><buffer><expr> E       defx#do_action('open', 'vsplit')
  nnoremap <silent><buffer><expr> L       defx#do_action('link')
  nnoremap <silent><buffer><expr> P       defx#do_action('preview')
  nnoremap <silent><buffer><expr> o       defx#do_action('open_tree', ['nested', 'toggle'])
  nnoremap <silent><buffer><expr> O       defx#do_action('open_tree', 'recursive')
  nnoremap <silent><buffer><expr> K       defx#do_action('new_directory')
  nnoremap <silent><buffer><expr> N       defx#do_action('new_file')
  nnoremap <silent><buffer><expr> M       defx#do_action('new_multiple_files')
  nnoremap <silent><buffer><expr> C       defx#do_action('toggle_columns', 'mark:filename:type:size:time')
  nnoremap <silent><buffer><expr> S       defx#do_action('toggle_sort', 'Time')
  nnoremap <silent><buffer><expr> se      defx#do_action('add_session')
  nnoremap <silent><buffer><expr> sl      defx#do_action('load_session')
  nnoremap <silent><buffer><expr> d       defx#do_action('remove_trash')
  nnoremap <silent><buffer><expr> r       defx#do_action('rename')
  nnoremap <silent><buffer><expr> x       defx#do_action('execute_system')
  nnoremap <silent><buffer><expr> >       defx#do_action('toggle_ignored_files')
  nnoremap <silent><buffer><expr> <       defx#do_action('change_ignored_files')
  nnoremap <silent><buffer><expr> .       defx#do_action('repeat')
  nnoremap <silent><buffer><expr> yy      defx#do_action('yank_path')
  nnoremap <silent><buffer><expr> h       defx#do_action('cd', ['..'])
  nnoremap <silent><buffer><expr> ~       defx#do_action('cd')
  nnoremap <silent><buffer><expr> \       defx#do_action('cd', getcwd())
  nnoremap <silent><buffer><expr> q       defx#do_action('quit')
  nnoremap <silent><buffer><expr> <Space> defx#do_action('toggle_select') . 'j'
  nnoremap <silent><buffer><expr> *       defx#do_action('toggle_select_all')
  nnoremap <silent><buffer><expr> j       line('.') == line('$') ? 'gg' : 'j'
  nnoremap <silent><buffer><expr> k       line('.') == 1 ? 'G' : 'k'
  nnoremap <silent><buffer><expr> <C-l>   defx#do_action('redraw')
  xnoremap <silent><buffer><expr> <CR>    defx#do_action('toggle_select_visual')
  nnoremap <silent><buffer><expr> <C-g>   defx#do_action('print')
  nnoremap <silent><buffer><expr> <Tab>   winnr('$') != 1 ?
  \ '<Cmd>wincmd w<CR>' :
  \ '<Cmd>Defx -buffer-name=temp -split=vertical<CR>'
  nnoremap <silent><buffer> gr <Cmd>call denite#start(
  \ [{'name': 'grep', 'args': [map(defx#get_selected_candidates(),
  \ { _, val -> val['action__path'] })]}])<CR>
'''

[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'

# hook_source = '''
#   execute 'source' fnamemodify(expand('$MYVIMRC'), ':h').'/rc/plugins/denite.rc.vim'
# '''

hook_add = '''
  nnoremap <silent> ;r
        \ <Cmd>Denite -buffer-name=register register<CR>
  xnoremap <silent> ;r
        \ <Cmd>Denite -default-action=replace -buffer-name=register
        \ register<CR>

  xnoremap <silent> * "qy:Denite -input=`@q` -buffer-name=search -search line<CR>
  nnoremap <silent><expr> ss finddir('.git', ';') != '' ?
  \ "\<Cmd>Denite -sorters=sorter/rank -unique -buffer-name=files
  \  file/point file/old file/dirty file/git file file:new\<CR>" :
  \ "\<Cmd>Denite -sorters=sorter/rank -unique -buffer-name=files
  \  file/point file/old file file:new\<CR>"

  nnoremap <silent><expr> tt  &filetype == 'help' ? "g\<C-]>" : "\<Cmd>DeniteCursorWord -buffer-name=tag -immediately tag:include\<CR>"
  nnoremap <silent><expr> tp  &filetype == 'help' ? "\<Cmd>pop\<CR>" : "\<Cmd>Denite jump\<CR>"

  nnoremap <silent><expr> ? wordcount().chars > 30000 ?
  \ "\<Cmd>Denite -buffer-name=search -start-filter
  \  -search line/external\<CR>" :
  \ "\<Cmd>Denite -buffer-name=search -start-filter -search line\<CR>"
  nnoremap <silent><expr> S wordcount().chars > 30000 ?
  \ "\<Cmd>DeniteCursorWord -buffer-name=search -search line/external\<CR>" :
  \ "\<Cmd>DeniteCursorWord -buffer-name=search -search line\<CR>"
  nnoremap <silent> s<Space> <Cmd>Denite -buffer-name=files  file/rec:'`fnamemodify(expand('$MYVIMRC'), ':h').'/rc'`'<CR>
  nnoremap <silent> sf       <Cmd>Denite -buffer-name=files -resume<CR>
  nnoremap <silent> ;f       <Cmd>Denite file_mru<CR>
  nnoremap <silent> ;b       <Cmd>Denite buffer<CR>
  nnoremap <silent> sn       <Cmd>Denite dein<CR>
  nnoremap <silent> sg       <Cmd>Denite ghq -default-action=cd<CR>
  nnoremap <silent> ;g       <Cmd>Denite -buffer-name=search -no-empty grep<CR>
  nnoremap <silent> ;w       <Cmd>DeniteCursorWord -buffer-name=search -no-empty grep<CR>
  nnoremap <silent> t        <Cmd>Denite -buffer-name=search -resume<CR>
  nnoremap <silent> <C-t>    <Cmd>Denite -buffer-name=deol
  \ -split=`has('nvim') ? 'floating' : 'horizontal'`
  \ -cursor-pos=`tabpagenr()-1` deol:zsh<CR>
  nnoremap <silent> <C-k> <Cmd>Denite change jump<CR>
'''

[plugins.ftplugin]
denite = '''
  " Define mappings
  nnoremap <silent><buffer><expr> <CR>    denite#do_map('do_action')
  nnoremap <silent><buffer><expr> a       denite#do_map('choose_action')
  nnoremap <silent><buffer><expr> d       denite#do_map('do_action', 'delete')
  nnoremap <silent><buffer><expr> e       denite#do_map('do_action', 'edit')
  nnoremap <silent><buffer><expr> p       denite#do_map('do_action', 'preview')
  nnoremap <silent><buffer><expr> P       denite#do_map('do_action', 'preview_bat')
  nnoremap <silent><buffer><expr> N       denite#do_map('do_action', 'new')
  nnoremap <silent><buffer><expr> q       denite#do_map('quit')
  nnoremap <silent><buffer><expr> '       denite#do_map('quick_move')
  nnoremap <silent><buffer><expr> i       denite#do_map('open_filter_buffer')
  nnoremap <silent><buffer><expr> <Space> denite#do_map('toggle_select').'j'
  nnoremap <silent><buffer><expr> r       denite#do_map('do_action', 'quickfix')
  nnoremap <silent><buffer><expr> <C-r>   denite#do_map('restore_sources')
  nnoremap <silent><buffer><expr> <C-l>   denite#do_map('redraw')
'''

[[plugins]]
repo = 'Shougo/context_filetype.vim'
hook_source = '''
let g:context_filetype#ignore_patterns = {
    \ 'toml': ['^\s*#\s*'],
    \ }
'''

[[plugins]]
repo = 'thinca/vim-visualstar'

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'Lokaltog/vim-easymotion'

[[plugins]]
repo = 'plasticboy/vim-markdown'

[[plugins]]
repo = 'Shougo/deoppet.nvim'

[[plugins]]
repo = 'adie/BlockDiff'

[[plugins]]
repo = 'Shougo/deoplete.nvim'

[[plugins]]
repo = 't9md/vim-quickhl.git'
hook_add = '''
  nmap <Space>m <Plug>(quickhl-manual-this)
  xmap <Space>m <Plug>(quickhl-manual-this)
  nmap <Space>M <Plug>(quickhl-manual-reset)
  xmap <Space>M <Plug>(quickhl-manual-reset)
'''

[[plugins]]
repo = 'Shougo/neomru.vim'

